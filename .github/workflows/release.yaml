# .github/workflows/release.yaml
name: Create GitHub Release üöÄ

on:
  push:
    tags:
      - 'v*' # Trigger workflow on tag push (e.g., v1.0.0, v0.1.0)

jobs:
  release:
    name: Create Release üì¶
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow the action to create releases
      pull-requests: write # Allow the action to create PRs

    steps:
      - name: Checkout code üõéÔ∏è
        uses: actions/checkout@v4

      - name: Get version from tag üè∑Ô∏è
        id: get_version
        # Extract the version number from the tag (removes 'refs/tags/')
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Check and update manifest version üîç
        run: |
          # Extract version from tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          
          # Read current version from manifest.json
          MANIFEST_VERSION=$(jq -r '.version' custom_components/bticino_intercom/manifest.json)
          
          if [ "$TAG_VERSION" != "$MANIFEST_VERSION" ]; then
            echo "Version mismatch: Tag version ($TAG_VERSION) != Manifest version ($MANIFEST_VERSION)"
            
            # Update manifest.json with the correct version
            jq --arg v "$TAG_VERSION" '.version = $v' custom_components/bticino_intercom/manifest.json > manifest.json.tmp
            mv manifest.json.tmp custom_components/bticino_intercom/manifest.json
            
            # Configure git
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'github-actions@github.com'
            
            # Create a new branch for the update
            BRANCH_NAME="fix/manifest-version-$TAG_VERSION"
            git checkout -b $BRANCH_NAME
            
            # Commit and push the changes
            git add custom_components/bticino_intercom/manifest.json
            git commit -m "fix: update manifest version to $TAG_VERSION"
            git push origin $BRANCH_NAME
            
            # Create a PR to merge the changes
            gh pr create \
              --title "fix: update manifest version to $TAG_VERSION" \
              --body "This PR updates the manifest version to match the release tag $TAG_VERSION" \
              --base main \
              --head $BRANCH_NAME
            
            # Fail the workflow to prevent release with incorrect version
            exit 1
          else
            echo "Version check passed: Tag version ($TAG_VERSION) matches Manifest version ($MANIFEST_VERSION)"
          fi

      - name: Package integration into zip ü§ê
        run: |
          # Navigate to the directory containing the integration
          cd ${{ github.workspace }}/custom_components/bticino_intercom
          # Create a zip file in the root workspace directory
          # Exclude hidden files/folders (like .git, .github, .vscode) and __pycache__
          zip -r ${{ github.workspace }}/bticino_intercom-${{ env.VERSION }}.zip . -x ".*" -x "__pycache__/*"

      - name: Create GitHub Release ‚ú®
        uses: softprops/action-gh-release@v2
        with:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions
          # The tag_name is automatically inferred from the triggering tag
          name: Release ${{ env.VERSION }}
          body: |
            üéâ Release ${{ env.VERSION }} of the BTicino Intercom integration!

            **Installation:**
            *   **HACS:** Recommended. Add the repository if you haven't already.
            *   **Manual:** Download the `bticino_intercom-${{ env.VERSION }}.zip` file below and extract the `bticino_intercom` folder into your `<config>/custom_components` directory.

            **Changes:**
            *(Consider adding release notes here automatically in the future if desired)*
            See commit history for changes since the last release.
          draft: false # Set to true to create a draft release first
          prerelease: false # Set to true if this is a pre-release (e.g., beta)
          files: | # List of files to attach to the release
            ${{ github.workspace }}/bticino_intercom-${{ env.VERSION }}.zip
